{"version":3,"sources":["data/users/reducers.js","data/posts/reducers.js","data/posts/actionTypes.js","data/comments/reducers.js","data/comments/actionTypes.js","data/rootReducer.js","data/configureStore.js","data/posts/actions.js","data/comments/actions.js","data/posts/selectors.js","data/comments/selectors.js","data/users/selectors.js","pages/Home/items/ReplyForm.js","pages/Home/items/Reply.js","pages/Home/items/Comment.js","pages/Home/items/CommentList.js","pages/Home/items/CommentForm.js","pages/Home/items/Post.js","pages/Home/index.js","layouts/DefaultLayout.js","App.js","index.js"],"names":["initialState","id","name","profileImageUrl","user","state","action","type","INITIAL_STATE","0","seq","writer","contents","createAt","likes","comments","likesOfMe","1","INITIAL_IDS_STATE","combineReducers","entities","Object","keys","length","Date","now","newLikedPost","postId","ids","replies","postSeq","commentSeq","previewComments","filter","f","commentId","map","comment","i","replyId","newLikedComment","find","history","createBrowserHistory","rootReducer","posts","router","connectRouter","writePost","getPosts","likePost","getComments","likeComment","deleteComment","deleteReply","getReplies","writeComment","writeReply","getCommentsByPost","getCommentsCount","reduce","r","c","getRepliesByPost","getUser","Wrapper","styled","div","ReplyForm","props","dispatch","useDispatch","useState","setContents","useSelector","selectors","useCallback","actions","onSubmit","e","preventDefault","placeholder","spellCheck","value","onChange","target","LiWrapper","li","FunctionWrapper","Reply","reply","datetime","moment","fromNow","onClick","UlWrapper","ul","Comment","style","color","undefined","key","CommentList","Fragment","CommentForm","ContentsWrapper","NameWrapper","Post","post","commentsCount","src","alt","Home","postsState","useEffect","useMemo","postList","className","DefaultLayout","Component","component","rest","render","matchProps","App","this","path","store","createStore","compose","applyMiddleware","routerMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.abfd3cea.chunk.js","sourcesContent":["import * as ActionTypes from '../rootActionTypes';\n\nconst initialState = {\n  id: 'sumin',\n  name: '이수민',\n  profileImageUrl: 'https://scontent-ssn1-1.xx.fbcdn.net/v/t31.0-8/20935107_126183028009063_1467195264240257468_o.jpg?_nc_cat=110&_nc_sid=09cbfe&_nc_ohc=H4pYEKc4mcYAX8I8T0q&_nc_oc=AQnA8IRwbfM5ixLlptPQ3O2sRHOukyqGwwTTEp3tTNCIArYyD0fbTk3dVjeAFBXSj8U&_nc_ht=scontent-ssn1-1.xx&oh=24630e746265220f870543bbc778638a&oe=5F452348',\n};\n\nexport default function user(state = initialState, action = {}) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport * as ActionTypes from '../rootActionTypes';\n\nconst INITIAL_STATE = {\n  0: {\n    seq: 0,\n    writer: {\n      id: 'sumin',\n      name: '이수민',\n      profileImageUrl:\n        'https://scontent-ssn1-1.xx.fbcdn.net/v/t31.0-8/20935107_126183028009063_1467195264240257468_o.jpg?_nc_cat=110&_nc_sid=09cbfe&_nc_ohc=H4pYEKc4mcYAX8I8T0q&_nc_oc=AQnA8IRwbfM5ixLlptPQ3O2sRHOukyqGwwTTEp3tTNCIArYyD0fbTk3dVjeAFBXSj8U&_nc_ht=scontent-ssn1-1.xx&oh=24630e746265220f870543bbc778638a&oe=5F452348',\n    },\n    contents: '클로버추얼패션',\n    createAt: '2020-07-28',\n    likes: 3,\n    comments: 0,\n    likesOfMe: false,\n  },\n  1: {\n    seq: 1,\n    writer: {\n      id: 'hong',\n      name: '홍길동',\n      profileImageUrl:\n        'https://lh3.googleusercontent.com/proxy/VPjiGJu2HRCdG6lsqscOeZiHORjC2oWVBPaNBajAURgPPT8cZKmuzAPLOBlDkqydxmSdgw3DumCrQXK51Qd4Vif2hcL2nTVkzWn8np68ShqB7znMbFBB9qf6imaoKO7-65Xn1NMilXzI19eWWS4kJt37oIkfz5bA2NladFMZj_u_xWAk',\n    },\n    contents: `React, Mobx, Redux 를 사용해 Facebook 댓글 구현하기 (Facebook 웹사이트 참고)`,\n    createAt: '2020-07-21',\n    likes: 1,\n    comments: 0,\n    likesOfMe: false,\n  },\n};\n\nconst INITIAL_IDS_STATE = [0, 1];\n\nfunction entities(state = INITIAL_STATE, action = {}) {\n  switch (action.type) {\n    case ActionTypes.ADD_POST:\n      return {\n        ...state,\n        [Object.keys(state).length]: {\n          id: Object.keys(state).length,\n          writer: action.user,\n          contents: action.contents,\n          createAt: Date.now(),\n          likes: 0,\n          comments: 0,\n          likesOfMe: false,\n        },\n      };\n    case ActionTypes.LIKE_POST: {\n      const newLikedPost = { ...state[action.postId] };\n      if(newLikedPost.likesOfMe ){\n        newLikedPost.likes -= 1;\n        newLikedPost.likesOfMe = false;\n      }else{\n        newLikedPost.likes += 1;\n        newLikedPost.likesOfMe = true;\n      }\n      return {\n        ...state,\n        [action.postId]: newLikedPost,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction ids(state = INITIAL_IDS_STATE, action = {}) {\n  switch (action.type) {\n    case ActionTypes.GET_POSTS:\n      return [...state];\n    case ActionTypes.ADD_POST:\n      return [state.length, ...state];\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  entities,\n  ids,\n});\n","export const ADD_POST = 'ADD_POST';\nexport const GET_POSTS = 'GET_POSTS';\nexport const LIKE_POST = 'LIKE_POST';\n","import * as ActionTypes from '../rootActionTypes';\n\nconst INITIAL_STATE = {\n  0: [\n    {\n      seq: 0,\n      writer: {\n        id: 'hong',\n        name: '홍길동',\n        profileImageUrl:\n          'https://scontent-ssn1-1.xx.fbcdn.net/v/t31.0-8/20935107_126183028009063_1467195264240257468_o.jpg?_nc_cat=110&_nc_sid=09cbfe&_nc_ohc=H4pYEKc4mcYAX8I8T0q&_nc_oc=AQnA8IRwbfM5ixLlptPQ3O2sRHOukyqGwwTTEp3tTNCIArYyD0fbTk3dVjeAFBXSj8U&_nc_ht=scontent-ssn1-1.xx&oh=24630e746265220f870543bbc778638a&oe=5F452348',\n      },\n      contents: `React, Mobx, Redux 를 사용해 Facebook 댓글 구현하기 (Facebook 웹사이트 참고)`,\n      createAt: '2020-07-29',\n      likes: 1,\n      likesOfMe: true,\n      replies: [\n        {\n          seq: 0,\n          postSeq: 0,\n          commentSeq: 0,\n          writer: {\n            id: 'hong',\n            name: '홍길동',\n            profileImageUrl:\n              'https://scontent-ssn1-1.xx.fbcdn.net/v/t31.0-8/20935107_126183028009063_1467195264240257468_o.jpg?_nc_cat=110&_nc_sid=09cbfe&_nc_ohc=H4pYEKc4mcYAX8I8T0q&_nc_oc=AQnA8IRwbfM5ixLlptPQ3O2sRHOukyqGwwTTEp3tTNCIArYyD0fbTk3dVjeAFBXSj8U&_nc_ht=scontent-ssn1-1.xx&oh=24630e746265220f870543bbc778638a&oe=5F452348',\n          },\n          contents:\n            'React, Mobx, Redux와 같은 Framework, Library를 사용하는 이유와 설계 의의를 이해하고 그에 맞게 코드를 작성할 수 있는가',\n          createAt: '2020-07-30',\n          likes: 3,\n          likesOfMe: true,\n        },\n      ],\n    },\n  ],\n};\nexport default function comments(state = INITIAL_STATE, action = {}) {\n  switch (action.type) {\n    case ActionTypes.GET_COMMENTS:\n      return state[action.postId];\n    case ActionTypes.ADD_COMMENT: {\n      const previewComments = state[action.postId] ? state[action.postId] : [];\n      const comments = [\n        ...previewComments,\n        {\n          seq: previewComments.length,\n          contents: action.contents,\n          likes: 0,\n          likesOfMe: false,\n          writer: action.writer,\n          replies: [],\n          createAt: Date.now(),\n        },\n      ];\n\n      return {\n        ...state,\n        [action.postId]: comments,\n      };\n    }\n    case ActionTypes.DELETE_COMMENT: {\n      const comments = state[action.postId].filter((f) => f.seq !== action.commentId);\n\n      return {\n        ...state,\n        [action.postId]: comments,\n      };\n    }\n    case ActionTypes.DELETE_REPLY: {\n      //console.log(action.replyId);\n      const comments = state[action.postId].map((comment, i) => {\n        if (comment.seq == action.commentId) {\n          comment.replies = comment.replies.filter((f) => f.seq !== action.replyId);\n          return comment;\n        } else {\n          return comment;\n        }\n      });\n\n      return {\n        ...state,\n        [action.postId]: comments,\n      };\n    }\n    case ActionTypes.LIKE_COMMENT: {\n      //console.log(action.postId);\n      //console.log(action.commentId);\n      const newLikedComment = state[action.postId].find((f) => f.seq == action.commentId);\n      if (newLikedComment.likesOfMe === false) {\n        newLikedComment.likes += 1;\n        newLikedComment.likesOfMe = true;\n      } else {\n        newLikedComment.likes -= 1;\n        newLikedComment.likesOfMe = false;\n      }\n      const comments = state[action.postId].map((comment, i) => {\n        if (comment.seq == action.commentId) {\n          return newLikedComment;\n        } else {\n          return comment;\n        }\n      });\n      return {\n        ...state,\n        [action.postId]: comments,\n      };\n    }\n    case ActionTypes.ADD_REPLY: {\n      const previewComments = state[action.postId] ? state[action.postId] : [];\n      const comments = previewComments.map((comment, i) => {\n        if (comment.seq == action.commentId) {\n          return {\n            ...comment,\n            replies: [\n              ...comment.replies,\n              {\n                postSeq: action.postId,\n                commentSeq: comment.seq,\n                seq: comment.replies.length,\n                contents: action.contents,\n                likes: 0,\n                likesOfMe: false,\n                writer: action.writer,\n                replies: [],\n                createAt: Date.now(),\n              },\n            ],\n          };\n        } else {\n          return comment;\n        }\n      });\n\n      return {\n        ...state,\n        [action.postId]: comments,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const GET_COMMENTS = 'GET_COMMENTS';\nexport const GET_REPLIES = 'GET_REPLIES';\nexport const LIKE_COMMENT = 'LIKE_COMMENT';\nexport const ADD_REPLY = 'ADD_REPLY';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const DELETE_REPLY = 'DELETE_REPLY';","import { connectRouter } from 'connected-react-router';\nimport { combineReducers } from 'redux';\nimport user from './users/reducers';\nimport posts from './posts/reducers';\nimport comments from './comments/reducers';\n\nconst createRootReducer = (history) =>\n  combineReducers({\n    comments,\n    posts,\n    router: connectRouter(history),\n    user,\n  });\n\n//combineReducers \n//리듀서(함수)들을 인자로 받아 key-value 로 이루어진 일종의 객체로 바인딩하는 역할을 하는 헬퍼 함수\n//리듀서 함수 ? : 현재 상태와 상태를 가공하는 액션을 받아 새로운 상태를 리턴하는 함수\nexport { createRootReducer };\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createRootReducer } from './rootReducer';\n\nconst history = createBrowserHistory(); \n//connected-react-router\n//리덕스에서 주소를 변경 및 확인하기 위해 history객체를 관리하는 라이브러리\n//단방향 흐름을 통해 리덕스에서 router상태를 동기화 할 수 있다. (history객체 -> store-> router-> component)\n\nconst rootReducer = createRootReducer(history);\n\n\nexport default function configureStore() {\n  \n  //createStore\n  //리덕스 스토어를 반환하여 Provider 컴포넌트로 상태를 전달 할 수 있도록 리덕스 스토어를 반환하는  함수\n  //인자로 보통 루트 리듀서와 applyMiddleware (리덕스 미들웨어 설정) 를 받는다.\n  //router middle ware 나 비동기 로직을 처리할 수 있는 react-thunk등을 사용할 수 있음\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(routerMiddleware(history)),\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n    )\n  );\n\n  return {\n    store,\n    history,\n  };\n}\n","import * as ActionTypes from '../rootActionTypes';\n\nexport function writePost(contents, user) {\n  return {\n    type: ActionTypes.ADD_POST,\n    contents,\n    user,\n  };\n}\n\nexport function getPosts() {\n  return {\n    type: ActionTypes.GET_POSTS,\n  };\n}\n\nexport function likePost(postId) {\n  return {\n    type: ActionTypes.LIKE_POST,\n    postId,\n  };\n}\n","import * as ActionTypes from '../rootActionTypes';\n\nexport function getComments(postId, comments) {\n  return {\n    type: ActionTypes.GET_COMMENTS,\n    comments,\n    postId,\n  };\n}\n\nexport function likeComment(postId, commentId) {\n  return {\n    type: ActionTypes.LIKE_COMMENT,\n    postId,\n    commentId,\n  };\n}\n\nexport function deleteComment(postId, commentId) {\n  return {\n    type: ActionTypes.DELETE_COMMENT,\n    postId,\n    commentId,\n  };\n}\n\nexport function deleteReply(postId, commentId, replyId) {\n  return {\n    type: ActionTypes.DELETE_REPLY,\n    postId,\n    commentId,\n    replyId\n  };\n}\n\nexport function getReplies(commentId, replies) {\n  return {\n    type: ActionTypes.GET_COMMENTS,\n    replies,\n    commentId,\n  };\n}\n\n\nexport function writeComment(postId, contents, writer) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    contents,\n    writer,\n    postId,\n  };\n}\n\nexport function writeReply(postId, commentId, contents, writer) {\n  return {\n    type: ActionTypes.ADD_REPLY,\n    commentId,\n    writer,\n    contents,\n    postId,\n  };\n}\n","export const getPosts = (state) => { return state.posts};\n","export const getComments = (state) => state.comments;\n\nexport const getCommentsByPost = (postSeq) => (state) => state.comments[postSeq] || [];\n\nexport const getCommentsCount = (postId) => (state) => {\n  const comments = state.comments[postId];\n  const count = comments ? comments.reduce((r, c) => r + c.replies.length, comments.length)  : 0;\n  return count;\n};\n\nexport const getRepliesByPost = (commentSeq) => (state) => state.replies[commentSeq] || [];","export const getUser = (state) => state.user;\n","import React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../../data/rootActions';\nimport * as selectors from '../../../data/rootSelectors';\nimport styled from 'styled-components';\n\nconst ReplyForm = (props) => {\n  const dispatch = useDispatch();\n\n  //post id, comment id\n  const { postSeq, commentSeq } = props;\n\n  //작성 댓글 state\n  const [contents, setContents] = useState('');\n\n  //my profile data 로드\n  const user = useSelector(selectors.users.getUser);\n\n  const writeReply = useCallback(\n    (postSeq, commentSeq, contents) => {\n      //댓글 작성\n      dispatch(actions.comments.writeReply(postSeq, commentSeq, contents, user));\n    },\n    [user]\n  );\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (contents == '') return;\n    writeReply(postSeq, commentSeq, contents);\n    setContents('');\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={onSubmit}>\n      <input\n        placeholder={'댓글 달기'}\n        spellCheck=\"false\"\n        value={contents}\n        onChange={(e) => setContents(e.target.value)}\n      />\n      </form>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin-left: 24px;\n  input {\n    width: 100%;\n    padding: 10px;\n    background-color: #eeeeee;\n    border-radius: 15px;\n    border: 0;\n  }\n`;\n\nexport default ReplyForm;\n","import React from 'react';\nimport moment from 'moment';\nimport ReplyForm from './ReplyForm';\nimport * as actions from '../../../data/rootActions';\nimport * as selectors from '../../../data/rootSelectors';\nimport { useDispatch , useSelector} from 'react-redux';\nimport styled from 'styled-components';\n\nconst Reply = ({ reply , postSeq}) => {\n\n  const { createAt, writer, contents, seq , commentSeq} = reply;\n  const dispatch = useDispatch();\n  const user = useSelector(selectors.users.getUser);\n  const datetime = moment(createAt).fromNow();\n\n  //삭제\n  const deleteHandler = (e) => {\n    e.preventDefault();\n    //console.log(g(`${postSeq} / ${commentSeq} / ${seq}`)\n    dispatch(actions.comments.deleteReply(postSeq, commentSeq, seq));\n  };\n\n  return (\n    <LiWrapper >\n     <Wrapper>\n        <p>{writer.name}</p>\n        <p>{contents}</p>\n      </Wrapper>\n      <FunctionWrapper>\n        {user.id == writer.id && (\n          <button type=\"button\" onClick={deleteHandler} >\n            삭제\n          </button>\n        )}\n        <span>{datetime}</span>\n      </FunctionWrapper>\n    </LiWrapper>\n  );\n};\n\nconst LiWrapper = styled.li`\n  margin-top: 10px;\n`\n\n\nconst Wrapper = styled.div`\n    p{\n      &:first-child{\n        font-weight: bold;\n        margin-bottom: 5px;\n      }\n    }\n    width: 100%;\n    background-color: #eeeeee;\n    padding: 10px;\n    border-radius: 15px;\n    border: 0;\n  \n`;\n//    color: #0057e7;\nconst FunctionWrapper = styled.div`\n  font-size: 13px;\n  font-weight: bold;\n  button{\n    background-color: transparent;\n    border: 0;\n    font-weight: bold;\n    &:last-child{\n      float: right;\n    }\n  }\n  margin-bottom: 12px;\n  span{\n    font-size: 13px;\n    color: gray;\n    margin-left: 6px;\n    &:last-child{\n      font-weight: normal;\n    }\n  }\n` \n\nexport default Reply;\n","import React from 'react';\nimport moment from 'moment';\nimport Reply from './Reply';\nimport * as actions from '../../../data/rootActions';\nimport * as selectors from '../../../data/rootSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nconst Comment = ({ comment, postSeq }) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectors.users.getUser);\n  const { createAt, writer, contents, replies, seq: commentSeq, likesOfMe, likes } = comment;\n\n  const datetime = moment(createAt).fromNow();\n\n  //좋아요\n  const likeHandler = (e) => {\n    e.preventDefault();\n    //console.log(postSeq);\n    dispatch(actions.comments.likeComment(postSeq, commentSeq));\n  };\n\n  //삭제\n  const deleteHandler = (e) => {\n    e.preventDefault();\n    //console.log(postSeq);\n    dispatch(actions.comments.deleteComment(postSeq, commentSeq));\n  };\n\n  return (\n    <LiWrapper >\n      <Wrapper>\n        <p>{writer.name}</p>\n        <p>{contents}</p>\n      </Wrapper>\n      <FunctionWrapper>\n        \n        <button type=\"button\" onClick={likeHandler} style={{color: likesOfMe ? '#0057e7' : 'black'}}>\n          좋아요 {likes} 개\n        </button>\n        <span>\n          댓글 {replies.length} 개\n        </span>\n        {user.id == writer.id && (\n          <button type=\"button\" onClick={deleteHandler} >\n            삭제\n          </button>\n        )}\n        <span>{datetime}</span>\n      </FunctionWrapper>\n\n      <UlWrapper>\n        {replies !== undefined && replies.map((reply) => <Reply key={reply.seq} reply={reply} postSeq={postSeq} />)}\n      </UlWrapper>\n    </LiWrapper>\n  );\n};\n\nconst LiWrapper = styled.li`\n  margin-top: 20px;\n`\n\nconst UlWrapper = styled.ul`\n  padding-left: 24px;\n`\nconst Wrapper = styled.div`\n    p{\n      &:first-child{\n        font-weight: bold;\n        margin-bottom: 5px;\n      }\n    }\n    width: 100%;\n    background-color: #eeeeee;\n    padding: 10px;\n    border-radius: 15px;\n    border: 0;\n  \n`;\n//    color: #0057e7;\nconst FunctionWrapper = styled.div`\n  font-size: 13px;\n  font-weight: bold;\n  button{\n    background-color: transparent;\n    border: 0;\n    font-weight: bold;\n    &:last-child{\n      float: right;\n    }\n  }\n  margin-bottom: 12px;\n  span{\n    font-size: 13px;\n    color: gray;\n    margin-left: 6px;\n    &:last-child{\n      font-weight: normal;\n    }\n  }\n` \nexport default Comment;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Comment from './Comment';\nimport * as selectors from '../../../data/rootSelectors';\nimport ReplyForm from './ReplyForm';\n\nconst CommentList = ({ postSeq }) => {\n\n  const comments = useSelector(selectors.comments.getCommentsByPost(postSeq));\n\n  return (\n    <ul>\n      {comments.map((comment, i) => (\n        <React.Fragment key={`comment-${i}`}>\n          <Comment key={comment.seq} postSeq={postSeq} comment={comment} />\n          <ReplyForm postSeq={postSeq} commentSeq={comment.seq} />\n        </React.Fragment>\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentList;\n","import React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../../data/rootActions';\nimport * as selectors from '../../../data/rootSelectors';\nimport styled from 'styled-components';\n\nconst CommentForm = (props) => {\n  const dispatch = useDispatch();\n\n  //post id\n  const { postSeq, commentSeq } = props;\n\n  //작성 댓글 state\n  const [contents, setContents] = useState('');\n\n  //my profile data 로드\n  const user = useSelector(selectors.users.getUser);\n\n  const writeComment = useCallback(\n    (postId, contents) => {\n      //댓글 작성\n      dispatch(actions.comments.writeComment(postId, contents, user));\n    },\n    [user]\n  );\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (contents == '') return;\n    writeComment(postSeq, contents);\n    setContents('');\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={onSubmit}>\n        <input\n          placeholder={'댓글을 입력하세요...'}\n          spellCheck=\"false\"\n          //ref={textareaEl}\n          value={contents}\n          onChange={(e) => setContents(e.target.value)}\n        />\n      </form>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  input {\n    width: 100%;\n    background-color: #eeeeee;\n    padding: 10px;\n    border-radius: 15px;\n    border: 0;\n  }\n`;\n\nexport default CommentForm;\n","import React from 'react';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport * as actions from '../../../data/rootActions';\nimport CommentList from './CommentList';\nimport CommentForm from './CommentForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport * as selectors from '../../../data/rootSelectors';\n\nconst Post = ({ post }) => {\n\n  const dispatch = useDispatch();\n  \n  //post data state 초기화\n  const {\n    seq,\n    createAt,\n    writer: { name, profileImageUrl },\n    contents,\n    likes,\n    likesOfMe,\n  } = post;\n  \n  //comment 갯수 get\n  //TODO: action reply 까지 셈 필요\n  const commentsCount = useSelector(selectors.comments.getCommentsCount(seq));\n\n  //작성 날짜 표기\n  const datetime = moment(createAt).fromNow();\n\n  //좋아요\n  const likeHandler = (e) => {\n    e.preventDefault();\n    dispatch(actions.posts.likePost(seq));\n  };\n\n  return (\n    <Wrapper>\n      <div>\n        <NameWrapper> \n          <img src={profileImageUrl} alt={name}/>\n          <span> {name} </span>\n          <br/>\n          <span> {datetime}</span>\n        </NameWrapper>\n        <ContentsWrapper>\n          <p>{contents}</p>\n          <button type=\"button\" \n            onClick={likeHandler} \n            style={{color: likesOfMe ? '#0057e7 ' : 'black'}}>\n              좋아요 {likes} 개\n          </button>\n          <span>댓글 {commentsCount} 개</span>\n        </ContentsWrapper>\n       </div>\n      <CommentList postSeq={seq} />\n      <CommentForm postSeq={seq} />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 22px;\n\n`\n\nconst ContentsWrapper = styled.div`\n   p{\n      font-weight: bold;\n      font-size: 20px;\n      margin-top: 11px;\n      margin-bottom: 13px;\n  }\n  span{\n        font-size: 15px;\n        color: gray;\n        float: right;\n  }\n  button{\n    background-color: transparent;\n    border: 0;\n    font-weight: bold;\n    font-size: 15px;\n    span{\n      margin-left: 8px;\n    }\n  }\n  border-bottom: 1px solid #dddddd;\n  padding-bottom: 12px;\n`\n\nconst NameWrapper = styled.div`\n  background-color: white;\n  img{\n    &:first-child{\n      object-fit: cover;\n      width: 40px;\n      height: 41px;\n      border-radius: 20px;\n      margin: 0;\n      padding: 0;\n      float: left;\n      margin-right: 11px;\n    }\n    \n  }\n  span{\n      font-size: 15px;\n      font-weight: bold;\n      &:last-child{\n        font-size: 13px;\n        color: gray;\n        font-weight: normal;\n    }\n  }\n`\nexport default Post;\n","import React, { useEffect, useMemo } from 'react';\nimport Post from './items/Post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../data/rootActions';\nimport * as selectors from '../../data/rootSelectors';\nimport '../../assets/style/app.css';\n\n//TODO: 배포전 주석 정리\nconst Home = () => {\n\n  const dispatch = useDispatch();\n\n  const postsState = useSelector(selectors.posts.getPosts);\n\n  //post data 로드\n  useEffect(() => {\n    dispatch(actions.posts.getPosts());\n  }, []);\n\n  //useMemo : redering 중에 실행 . 디펜던시에 넣은 값이 변화가 없는 경우, 이전에 실행했던 연산의 결과 기억했다 반환\n  //(리덕스 스토어) post 리스트 로드\n  const posts = useMemo(() => \n    postsState.ids.map((id) => postsState.entities[id]\n  ),[ postsState.entities, postsState.ids]);\n\n  const postList = useMemo(() => \n    posts.map((post) => <Post key={post.seq} post={post} />\n  ), [posts]);\n  \n  return (\n    <div className=\"container\">\n      {postList}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport * as selectors from '../data/rootSelectors';\n\n\nfunction DefaultLayout(props) {\n\n  const { component: Component, ...rest } = props;\n  \n  const dispatch = useDispatch();\n\n\n  useEffect(()=>{\n  },[])\n\n  return (\n    <Route\n      {...rest}\n      render={(matchProps) => (\n        <>\n          <Component {...matchProps} {...rest} />\n        </>\n      )}\n    />\n  );\n}\n\nexport default DefaultLayout;\n","import React, { Component } from 'react';\nimport Home from './pages/Home';\nimport { Switch } from 'react-router-dom';\nimport DefaultLayout from './layouts/DefaultLayout';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './assets/style/app.css';\n\nclass App extends Component {\n  render() {\n    \n    const { history } = this.props;\n\n    return (\n   \n      <ConnectedRouter history={history}>   \n      {/* ConnectedRouter : 리덕스 스토어의 히스토리 데이터를 props로 하위 컴포넌트에 전달해주는 역할 */}\n        <Switch>\n           {/* compo인자로 전달된 컴포를 router로 감싸서 랜더링 해주는 common layout용도의 컴포 제작 */}\n          <DefaultLayout path=\"/\" component={Home} />\n        </Switch>\n      </ConnectedRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './data/configureStore';\nimport App from './App';\n\nconst { store, history } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}> \n    {/* 리덕스 스토어를 전달하며, 하위 리액트 컴포넌트가 공유된 스토어에 접근 할 수 있도록 하는 컴포넌트 */}\n    <App history={history} />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}